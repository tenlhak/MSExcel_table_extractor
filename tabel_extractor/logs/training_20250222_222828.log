2025-02-22 22:28:28,409 - INFO - Process 0/4 starting training
2025-02-22 22:28:31,365 - INFO - Using provided sampler, shuffle set to False
2025-02-22 22:28:31,365 - INFO - Created DataLoader with: batch_size=1, num_workers=2, shuffle=False, sampler=provided
2025-02-22 22:28:35,577 - ERROR - Error in batch 0 on GPU 0: CUDA out of memory. Tried to allocate 398.00 MiB. GPU 0 has a total capacity of 10.75 GiB of which 334.69 MiB is free. Process 2035053 has 8.19 GiB memory in use. Process 2035657 has 1.93 GiB memory in use. Including non-PyTorch memory, this process has 300.00 MiB memory in use. Of the allocated memory 36.55 MiB is allocated by PyTorch, and 7.45 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
2025-02-22 22:28:38,675 - ERROR - Error in batch 1 on GPU 0: Detected mismatch between collectives on ranks. Rank 0 is running collective: CollectiveFingerPrint(SequenceNumber=6, OpType=BROADCAST, TensorShape=[256], TensorDtypes=Float, TensorDeviceTypes=TensorOptions(dtype=float (default), device=cuda, layout=Strided (default), requires_grad=false (default), pinned_memory=false (default), memory_format=(nullopt))), but Rank 1 is running collective: CollectiveFingerPrint(SequenceNumber=6, OpType=ALLREDUCE, TensorShape=[3952658], TensorDtypes=Float, TensorDeviceTypes=TensorOptions(dtype=float (default), device=cuda, layout=Strided (default), requires_grad=false (default), pinned_memory=false (default), memory_format=(nullopt))).Collectives differ in the following aspects:   Op type: BROADCASTvs ALLREDUCE  Tensor Tensor shapes: 256vs 3952658
